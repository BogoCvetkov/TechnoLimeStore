{
	"id": "57c2ce7b70916d1c0519c3dd64a67e2d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Project/error.sol": {
				"content": "contract FeedBackLibrary {\r\n\r\n    /// Can't add a product that already exists\r\n    error ProductExists();\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Project/error.sol": {
				"FeedBackLibrary": {
					"abi": [
						{
							"inputs": [],
							"name": "ProductExists",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Project/error.sol\":0:108  contract FeedBackLibrary {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Project/error.sol\":0:108  contract FeedBackLibrary {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200b33a5c6c4a2bbbbfe998df777a6945ddc8eae76629238ce1224bfcbba89fcd964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200b33a5c6c4a2bbbbfe998df777a6945ddc8eae76629238ce1224bfcbba89fcd964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND CALLER 0xA5 0xC6 0xC4 LOG2 0xBB 0xBB INVALID SWAP10 DUP14 0xF7 PUSH24 0xA6945DDC8EAE76629238CE1224BFCBBA89FCD964736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "0:108:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212200b33a5c6c4a2bbbbfe998df777a6945ddc8eae76629238ce1224bfcbba89fcd964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND CALLER 0xA5 0xC6 0xC4 LOG2 0xBB 0xBB INVALID SWAP10 DUP14 0xF7 PUSH24 0xA6945DDC8EAE76629238CE1224BFCBBA89FCD964736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "0:108:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 108,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 0,
									"end": 108,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 0,
									"end": 108,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 108,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 108,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 108,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 0,
									"end": 108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 108,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 0,
									"end": 108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 108,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 108,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 0,
									"end": 108,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 108,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 0,
									"end": 108,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 0,
									"end": 108,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 108,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 108,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 108,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 0,
									"end": 108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 108,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b33a5c6c4a2bbbbfe998df777a6945ddc8eae76629238ce1224bfcbba89fcd964736f6c63430008070033",
									".code": [
										{
											"begin": 0,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 108,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ProductExists\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"ProductExists()\":[{\"notice\":\"Can't add a product that already exists\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Project/error.sol\":\"FeedBackLibrary\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Project/error.sol\":{\"keccak256\":\"0x57a35fb2776e5e5e709dcdf55638f4f068ec0f2f8813f73fa698d4bb7df8d73e\",\"urls\":[\"bzz-raw://4302b667c1d129aefb781ae223e4d47e993e068c926492fe27ac83dcbeb1c5c8\",\"dweb:/ipfs/QmSv81XGvmG6DCTa1vnnWwkT5BhUdsbaUYAmoEjSw9nK6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ProductExists()": [
								{
									"notice": "Can't add a product that already exists"
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Project/error.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Project/error.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"\n--> Project/error.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Project/error.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Project/error.sol": {
				"ast": {
					"absolutePath": "Project/error.sol",
					"exportedSymbols": {
						"FeedBackLibrary": [
							4
						]
					},
					"id": 5,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4,
							"linearizedBaseContracts": [
								4
							],
							"name": "FeedBackLibrary",
							"nameLocation": "9:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1,
										"nodeType": "StructuredDocumentation",
										"src": "34:43:0",
										"text": "Can't add a product that already exists"
									},
									"id": 3,
									"name": "ProductExists",
									"nameLocation": "89:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "102:2:0"
									},
									"src": "83:22:0"
								}
							],
							"scope": 5,
							"src": "0:108:0",
							"usedErrors": [
								3
							]
						}
					],
					"src": "0:108:0"
				},
				"id": 0
			}
		}
	}
}