{
	"id": "8a093df64218156ee983f39e67f8fa74",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Project/FeedBackLib.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\ncontract Errors {\r\n\r\n    /// Can't add a product that already exists\r\n    error ProductExists();\r\n\r\n    error ProductNotExistent();\r\n\r\n    /// Error trown when the productID doesn't exist or it has been bought once already\r\n    error ItemIdWrongOrBoughtAlready();\r\n\r\n    /// Error trown when money sent is less than Product price\r\n    error WrongIdOrLessThanPrice();\r\n}\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Project/FeedBackLib.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "ItemIdWrongOrBoughtAlready",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ProductExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ProductNotExistent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "WrongIdOrLessThanPrice",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Project/FeedBackLib.sol\":67:436  contract Errors {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Project/FeedBackLib.sol\":67:436  contract Errors {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220da2aec92ebe9c58ae725b22980dc9c2f0995c382681d9b19a9bda0b17e882f9164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220da2aec92ebe9c58ae725b22980dc9c2f0995c382681d9b19a9bda0b17e882f9164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0x2A 0xEC SWAP3 0xEB 0xE9 0xC5 DUP11 0xE7 0x25 0xB2 0x29 DUP1 0xDC SWAP13 0x2F MULMOD SWAP6 0xC3 DUP3 PUSH9 0x1D9B19A9BDA0B17E88 0x2F SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "67:369:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220da2aec92ebe9c58ae725b22980dc9c2f0995c382681d9b19a9bda0b17e882f9164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0x2A 0xEC SWAP3 0xEB 0xE9 0xC5 DUP11 0xE7 0x25 0xB2 0x29 DUP1 0xDC SWAP13 0x2F MULMOD SWAP6 0xC3 DUP3 PUSH9 0x1D9B19A9BDA0B17E88 0x2F SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "67:369:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 67,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 436,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220da2aec92ebe9c58ae725b22980dc9c2f0995c382681d9b19a9bda0b17e882f9164736f6c63430008070033",
									".code": [
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 436,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ItemIdWrongOrBoughtAlready\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProductExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProductNotExistent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongIdOrLessThanPrice\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"ItemIdWrongOrBoughtAlready()\":[{\"notice\":\"Error trown when the productID doesn't exist or it has been bought once already\"}],\"ProductExists()\":[{\"notice\":\"Can't add a product that already exists\"}],\"WrongIdOrLessThanPrice()\":[{\"notice\":\"Error trown when money sent is less than Product price\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Project/FeedBackLib.sol\":\"Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Project/FeedBackLib.sol\":{\"keccak256\":\"0x084f2e17b27d2d5414afd71b1b4855d713d474efad15a1d3533d3df15bbb9eac\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4e98065bf6d037720b4a76d7b9d3a8edc07e2b2918b961d9057f52dd46eac354\",\"dweb:/ipfs/QmbUUaTjJFkoVeBGhtoCa6arqaDSMMbrXZKVseYDxCjh5z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ItemIdWrongOrBoughtAlready()": [
								{
									"notice": "Error trown when the productID doesn't exist or it has been bought once already"
								}
							],
							"ProductExists()": [
								{
									"notice": "Can't add a product that already exists"
								}
							],
							"WrongIdOrLessThanPrice()": [
								{
									"notice": "Error trown when money sent is less than Product price"
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Project/FeedBackLib.sol": {
				"ast": {
					"absolutePath": "Project/FeedBackLib.sol",
					"exportedSymbols": {
						"Errors": [
							13
						]
					},
					"id": 14,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "Errors",
							"nameLocation": "76:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "92:43:0",
										"text": "Can't add a product that already exists"
									},
									"id": 4,
									"name": "ProductExists",
									"nameLocation": "147:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "160:2:0"
									},
									"src": "141:22:0"
								},
								{
									"id": 6,
									"name": "ProductNotExistent",
									"nameLocation": "177:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "195:2:0"
									},
									"src": "171:27:0"
								},
								{
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "206:83:0",
										"text": "Error trown when the productID doesn't exist or it has been bought once already"
									},
									"id": 9,
									"name": "ItemIdWrongOrBoughtAlready",
									"nameLocation": "301:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:0"
									},
									"src": "295:35:0"
								},
								{
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "338:58:0",
										"text": "Error trown when money sent is less than Product price"
									},
									"id": 12,
									"name": "WrongIdOrLessThanPrice",
									"nameLocation": "408:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "430:2:0"
									},
									"src": "402:31:0"
								}
							],
							"scope": 14,
							"src": "67:369:0",
							"usedErrors": [
								4,
								6,
								9,
								12
							]
						}
					],
					"src": "40:400:0"
				},
				"id": 0
			}
		}
	}
}